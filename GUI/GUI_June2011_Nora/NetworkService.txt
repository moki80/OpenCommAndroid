/** The Network service that handles all the creation of privatespaces and people through
 * the internet! Synchronizes everyone together and let's them communicate with one another */
public class NetworkService{
    /* Not totally sure what the variables should be - Nora */
    
    /** Create a room */
    public void createRoom(int roomID){
    }
    
    /** Delete a room from network */
    public void deleteRoom(int roomID){
    }
    
    /** Add this Person to the PrivateSpace, and update it
     * for EVERYBODY's individual privateSpace objects */
    public void addPerson(int roomID, int personID){
    }
    
    /** Delete this Person to the PrivateSpace, and update it
     * for EVERYBODY's individual privateSpace objects */
    public void deletePerson(int roomID, int personID)}
    }
    
    /** Send this person an invitation asking whether they would like to join
     * the privatespace */
    public void send_Invitation(int roomID, int personID){
    }
    
    /** This person accepted, therefore call addPerson */
    public void receive_accept(int roomID, int personID){
    }
    
    /** This person declined, therefore you do not have to wait for the invitation anymore,
     * (assuming we have some sort of ticket system where we wait for people    */
    public void receive_decline(int roomID, int personID){
    }
    
    /** If this person is joining an already existing privatespace, then 
     * send over a LinkedList of people who are already in that privateSpace */
    public void send_addPersonExistingPS(){
    }
    
}